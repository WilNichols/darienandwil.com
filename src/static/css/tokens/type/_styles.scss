@use "sass:string";

$body-gap: 1em;

%degular {
  font-family: "degular-variable", sans-serif;
  font-variation-settings: "wght" 400, "opsz" 6, "ital" 0;
}

@mixin headingStyles {
  @for $i from 1 through 6 {
    %heading--#{$i} {
      font-size: var(--type-#{6 - $i});
      font-weight: 500;
    }
  }
}
  
a {
  color: var(--contentPrimaryColor);
  p &, .page-info & {
    color: var(--linkColor);
    &:visited {
      color: var(--linkVisitedColor);
    }
  }
}

p {
  margin: 0 auto $body-gap auto;
  text-wrap: pretty;
  line-height: 1.5em;
} 

strong {
  font-variation-settings: "wght" 450;
}

@include headingStyles;

@for $i from 1 through 6 {
  .text--heading--#{$i} {
    @extend %heading--#{$i};
    position: relative;
    margin: 0;
    @if ($i > 1) {
      &::before {
        content: '';
        position: absolute;
        inset: .5em auto .5em -1ex;
        background-color: var(--contentTertiaryColor);
        width: .25rem;
        border-radius: .125rem;
      }
    }
  }
}

// colors 
$colorGroups: '', '--Tinted';
$colors: 'Primary', 'Secondary', 'Tertiary';
@each $group in $colorGroups {
  @each $color in $colors {
    .text#{string.to-lower-case($group)}--#{string.to-lower-case($color)} {
      $groupName: string.slice($group, 3, 99);
      color: var(--content#{$groupName}#{$color}Color);
    }
  }
}

.text--subheadline {
  font-size: var(--type--1);
  font-variation-settings: "wght" 500;
}